/*
 * Irisnet API
 * Artificial Intelligence (AI) for image- and video-processing in realtime. This is an interactive documentation meant to give a place were you can quickly look up the endpoints and their schemas, while also giving you the option to try things out yourself.  Listed below you'll see the available endpoints of the API that can be expanded by clicking on it. Each expanded endpoint lists the request parameter (if available) and the request body (if available). The request body can list some example bodies and the schema, explaining each model in detail. Additionally you'll find a 'Try it out' button where you can type in your custom parameters and custom body and execute that against the API. The responses section in the expanded endpoint lists the possible responses with their corresponding status codes. If you've executed an API call it will also show you the response from the server.  Underneath the endpoints you'll find the model schemas. These are the models used for the requests and responses. By clicking on the right arrow you can expand the model and it will show you a description of the model and the model parameters. For nested models you can keep clicking the right arrow to reveal further details on it.  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.irisnet.java.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Describes a rectangle that stretches around the recognized object. This is useful when redacting or blurring certain recognized objects. Each object contains the name of the classification and coordinates for a rectangle around the recognized object. The origin point (y &#x3D; 0.0, x &#x3D; 0.0) of the coordinate system is on the top left of the of the source material. The bottom right of the source is always y &#x3D; 1 and x &#x3D; 1.
 */
@ApiModel(description = "Describes a rectangle that stretches around the recognized object. This is useful when redacting or blurring certain recognized objects. Each object contains the name of the classification and coordinates for a rectangle around the recognized object. The origin point (y = 0.0, x = 0.0) of the coordinate system is on the top left of the of the source material. The bottom right of the source is always y = 1 and x = 1.")

public class INObject {
  public static final String SERIALIZED_NAME_IN_CLASS = "inClass";
  @SerializedName(SERIALIZED_NAME_IN_CLASS)
  private String inClass;

  public static final String SERIALIZED_NAME_IN_GROUP = "inGroup";
  @SerializedName(SERIALIZED_NAME_IN_GROUP)
  private String inGroup;

  public static final String SERIALIZED_NAME_IN_ID = "inId";
  @SerializedName(SERIALIZED_NAME_IN_ID)
  private String inId;

  /**
   * The color of the object, e.g. the color of the hair. Is only available for certain classification objects. See list below:  * _hair_ - black, brown, blonde, grey, red, other
   */
  @JsonAdapter(ColorEnum.Adapter.class)
  public enum ColorEnum {
    BLACK("black"),
    
    BROWN("brown"),
    
    BLONDE("blonde"),
    
    GREY("grey"),
    
    RED("red"),
    
    OTHER("other");

    private String value;

    ColorEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ColorEnum fromValue(String value) {
      for (ColorEnum b : ColorEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ColorEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ColorEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ColorEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ColorEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_COLOR = "color";
  @SerializedName(SERIALIZED_NAME_COLOR)
  private ColorEnum color;

  /**
   * The style attribute of the object, e.g. the style of the hair. Is only available for certain classification objects. See list below:  * _hair_ - longHaired, shortHaired
   */
  @JsonAdapter(StyleEnum.Adapter.class)
  public enum StyleEnum {
    LONGHAIRED("longHaired"),
    
    SHORTHAIRED("shortHaired");

    private String value;

    StyleEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StyleEnum fromValue(String value) {
      for (StyleEnum b : StyleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StyleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StyleEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StyleEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StyleEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STYLE = "style";
  @SerializedName(SERIALIZED_NAME_STYLE)
  private StyleEnum style;

  public static final String SERIALIZED_NAME_X0 = "x0";
  @SerializedName(SERIALIZED_NAME_X0)
  private Float x0;

  public static final String SERIALIZED_NAME_Y0 = "y0";
  @SerializedName(SERIALIZED_NAME_Y0)
  private Float y0;

  public static final String SERIALIZED_NAME_WIDTH = "width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private Float width;

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private Float height;

  public static final String SERIALIZED_NAME_PROBABILITY = "probability";
  @SerializedName(SERIALIZED_NAME_PROBABILITY)
  private Integer probability;


  public INObject inClass(String inClass) {
    
    this.inClass = inClass;
    return this;
  }

   /**
   * The classification of the recognized object.
   * @return inClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "face", value = "The classification of the recognized object.")

  public String getInClass() {
    return inClass;
  }


  public void setInClass(String inClass) {
    this.inClass = inClass;
  }


  public INObject inGroup(String inGroup) {
    
    this.inGroup = inGroup;
    return this;
  }

   /**
   * The group of the classification.
   * @return inGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "human", value = "The group of the classification.")

  public String getInGroup() {
    return inGroup;
  }


  public void setInGroup(String inGroup) {
    this.inGroup = inGroup;
  }


  public INObject inId(String inId) {
    
    this.inId = inId;
    return this;
  }

   /**
   * The group of the classification.
   * @return inId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "human", value = "The group of the classification.")

  public String getInId() {
    return inId;
  }


  public void setInId(String inId) {
    this.inId = inId;
  }


  public INObject color(ColorEnum color) {
    
    this.color = color;
    return this;
  }

   /**
   * The color of the object, e.g. the color of the hair. Is only available for certain classification objects. See list below:  * _hair_ - black, brown, blonde, grey, red, other
   * @return color
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "black", value = "The color of the object, e.g. the color of the hair. Is only available for certain classification objects. See list below:  * _hair_ - black, brown, blonde, grey, red, other")

  public ColorEnum getColor() {
    return color;
  }


  public void setColor(ColorEnum color) {
    this.color = color;
  }


  public INObject style(StyleEnum style) {
    
    this.style = style;
    return this;
  }

   /**
   * The style attribute of the object, e.g. the style of the hair. Is only available for certain classification objects. See list below:  * _hair_ - longHaired, shortHaired
   * @return style
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "longHaired", value = "The style attribute of the object, e.g. the style of the hair. Is only available for certain classification objects. See list below:  * _hair_ - longHaired, shortHaired")

  public StyleEnum getStyle() {
    return style;
  }


  public void setStyle(StyleEnum style) {
    this.style = style;
  }


  public INObject x0(Float x0) {
    
    this.x0 = x0;
    return this;
  }

   /**
   * The starting point of the rectangle in the vertical (x) direction.
   * @return x0
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.1", value = "The starting point of the rectangle in the vertical (x) direction.")

  public Float getX0() {
    return x0;
  }


  public void setX0(Float x0) {
    this.x0 = x0;
  }


  public INObject y0(Float y0) {
    
    this.y0 = y0;
    return this;
  }

   /**
   * The starting point of the rectangle in the horizontal (y) direction.
   * @return y0
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.1", value = "The starting point of the rectangle in the horizontal (y) direction.")

  public Float getY0() {
    return y0;
  }


  public void setY0(Float y0) {
    this.y0 = y0;
  }


  public INObject width(Float width) {
    
    this.width = width;
    return this;
  }

   /**
   * The distance from the starting point (y0) to end the rectangle in the horizontal direction.
   * @return width
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.1", value = "The distance from the starting point (y0) to end the rectangle in the horizontal direction.")

  public Float getWidth() {
    return width;
  }


  public void setWidth(Float width) {
    this.width = width;
  }


  public INObject height(Float height) {
    
    this.height = height;
    return this;
  }

   /**
   * The distance from the starting point (x0) to end the rectangle in the vertical direction.
   * @return height
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.1", value = "The distance from the starting point (x0) to end the rectangle in the vertical direction.")

  public Float getHeight() {
    return height;
  }


  public void setHeight(Float height) {
    this.height = height;
  }


  public INObject probability(Integer probability) {
    
    this.probability = probability;
    return this;
  }

   /**
   * The probability that the object found matches the classification.
   * @return probability
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "94", value = "The probability that the object found matches the classification.")

  public Integer getProbability() {
    return probability;
  }


  public void setProbability(Integer probability) {
    this.probability = probability;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    INObject inObject = (INObject) o;
    return Objects.equals(this.inClass, inObject.inClass) &&
        Objects.equals(this.inGroup, inObject.inGroup) &&
        Objects.equals(this.inId, inObject.inId) &&
        Objects.equals(this.color, inObject.color) &&
        Objects.equals(this.style, inObject.style) &&
        Objects.equals(this.x0, inObject.x0) &&
        Objects.equals(this.y0, inObject.y0) &&
        Objects.equals(this.width, inObject.width) &&
        Objects.equals(this.height, inObject.height) &&
        Objects.equals(this.probability, inObject.probability);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inClass, inGroup, inId, color, style, x0, y0, width, height, probability);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class INObject {\n");
    sb.append("    inClass: ").append(toIndentedString(inClass)).append("\n");
    sb.append("    inGroup: ").append(toIndentedString(inGroup)).append("\n");
    sb.append("    inId: ").append(toIndentedString(inId)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    style: ").append(toIndentedString(style)).append("\n");
    sb.append("    x0: ").append(toIndentedString(x0)).append("\n");
    sb.append("    y0: ").append(toIndentedString(y0)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    probability: ").append(toIndentedString(probability)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

